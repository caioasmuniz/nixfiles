# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.initrd.systemd.enable = true;
  boot.initrd.postDeviceCommands = "sleep 3";
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.initrd.luks.devices."swap".device = "/dev/disk/by-uuid/b0c42ef5-fd7f-4a08-9d50-43316223aac1";

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/b0aa153c-333d-4e61-8533-a0faba2604e4";


  fileSystems."/" = {
    device = "/dev/disk/by-uuid/a316f638-c48c-4a91-9057-3c137b2d6dea";
    fsType = "btrfs";
    options = [ "subvol=@nixos" "compress=zstd" "autodefrag" "noatime" ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/a316f638-c48c-4a91-9057-3c137b2d6dea";
    fsType = "btrfs";
    options = [ "subvol=@home" "compress=zstd" "autodefrag" "noatime" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/E637-868B";
    fsType = "vfat";
  };

  swapDevices = [{
    device = "/dev/disk/by-uuid/84513243-be80-40ad-9b3e-2529272794ab";
    priority = 0;
    discardPolicy = "pages";
  }];

  zramSwap = {
    enable = true;
    priority = 1;
    algorithm = "zstd";
    swapDevices = 1;
    memoryPercent = 50;
  };


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
